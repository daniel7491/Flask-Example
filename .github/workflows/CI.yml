name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  BUILD:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: "docker build . --file Dockerfile --tag lidorlg/flask-example-new:${{ github.run_number }}"
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v3
      env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

    - name: Build Tag and push Docker Image
      env:
        IMAGE_NAME: devopsacademy2.jfrog.io/example-demo-virtual/flask-example-new:${{ github.run_number }}
      run: |
          jf docker build -t $IMAGE_NAME .
          jf docker push $IMAGE_NAME
          
    - name: Publish Build info With JFrog CLI
      env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
      run: |
          # Export the build name and build nuber
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
  # TEST:
  #   needs: BUILD
  #   runs-on: self-hosted
  #   steps:
  #   - name: Test the Docker Image
  #     run: "docker run -itd -p 6969:6969 --name flask lidorlg/flask-example-new:${{ github.sha }}"
  #   - run: "sleep 5 && curl localhost:6969"
  #   - run: "docker stop flask && docker rm flask"
  # PUSH:
  #   needs: [BUILD, TEST]
  #   runs-on: self-hosted
  #   steps:
  #   - name: Login to Docker Hub 
  #     uses: docker/login-action@v1
  #     with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Push Docker Image
  #     run: "docker push lidorlg/flask-example-new:${{ github.sha }}"
